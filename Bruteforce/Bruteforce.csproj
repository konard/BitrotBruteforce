<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <Configurations>Release;Debug</Configurations>
        <Platforms>x64</Platforms>
    </PropertyGroup>

    <ItemGroup>
      <Content Include="..\CudaAlignedBitrotFinder\bin\x64\Release\CudaAlignedBitrotFinder.dll">
        <Link>libs\CudaAlignedBitrotFinder.dll</Link>
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
      <Content Include="..\CudaUnalignedBitrotFinder\bin\x64\Release\CudaUnalignedBitrotFinder.dll">
        <Link>libs\CudaUnalignedBitrotFinder.dll</Link>
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
      <Content Include="..\README.md">
        <Link>README.md</Link>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
      <None Remove="libcrypto_libressl_onecore.dll" />
      <None Remove="libcrypto_libressl_desktop.dll" />
      <None Remove="libcrypto-3-x64_openssl.dll" />
      <None Remove="libcrypto-3-x64_mingw_openssl.dll" />
      <None Remove="libcrypto-3-x64_mingw_new.dll" />
      <None Remove="libcrypto-3-x64_cl.dll" />
      <None Remove="libcrypto_libre.dll" />
      <None Remove="libgnutls-30_mingw.dll" />
      <Content Update="libs\libcrypto-3-x64_cl.dll">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
      <None Remove="libs\libcrypto-3-x64_cl.dll" />
      <Content Include="libs\libcrypto-3-x64_cl.dll">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
      <None Remove="libs\libcrypto-3-x64_cl.so" />
      <Content Include="libs\libcrypto-3-x64_cl.so">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
      <None Remove="libs\CudaAlignedBitrotFinder.so" />
      <Content Include="libs\CudaAlignedBitrotFinder.so">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
      <None Remove="libs\CudaUnalignedBitrotFinder.so" />
      <Content Include="libs\CudaUnalignedBitrotFinder.so">
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      </Content>
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="McMaster.Extensions.CommandLineUtils" Version="4.1.1" />
      <PackageReference Include="System.CommandLine" Version="2.0.0-beta4.22272.1" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Properties\" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="Properties\launchSettings.json" />
    </ItemGroup>
    
    <!-- Only include CUDA project references when not in CI -->
    <ItemGroup Condition="'$(CI)' != 'true'">
        <ProjectReference Include="..\CudaAlignedBitrotFinder/CudaAlignedBitrotFinder.vcxproj">
            <Project>{689208EA-24A1-48C5-9ACE-202640267B40}</Project>
            <Name>CudaAlignedBitrotFinder</Name>
            <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
            <Private>false</Private>
            <OutputItemType>None</OutputItemType>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </ProjectReference>
    </ItemGroup>

    <ItemGroup Condition="'$(CI)' != 'true'">
        <ProjectReference Include="..\CudaUnalignedBitrotFinder/CudaUnalignedBitrotFinder.vcxproj">
            <Project>{AC30D969-E8D4-43A5-9934-9B80310A01EE}</Project>
            <Name>CudaUnalignedBitrotFinder</Name>
            <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
            <Private>false</Private>
            <OutputItemType>None</OutputItemType>
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </ProjectReference>
    </ItemGroup>

    <!-- Skip CUDA build in CI as it's handled by the workflow -->
    <Target Name="PreBuildCUDALibraries" BeforeTargets="PreBuildEvent" Condition="'$(Configuration)' == 'Release' AND '$(CI)' != 'true'">
        <Exec Command="powershell -ExecutionPolicy Bypass -File $(ProjectDir)buildCuda.ps1" IgnoreExitCode="false" />
    </Target>

</Project>
