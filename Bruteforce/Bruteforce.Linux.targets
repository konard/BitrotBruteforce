<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- MSBuild targets for Linux CUDA cross-compilation from Windows -->

  <!-- Hook into the publish process for Linux targets -->
  <Target Name="BuildLinuxCudaModules"
          BeforeTargets="PrepareForPublish"
          Condition="'$(RuntimeIdentifier)' == 'linux-x64' And '$(OS)' == 'Windows_NT'">

    <Message Text="Detected Linux target from Windows - initiating CUDA cross-compilation..." Importance="high" />

    <!-- Check if CUDA is installed -->
    <PropertyGroup>
      <CudaPath Condition="'$(CudaPath)' == ''">$(CUDA_PATH)</CudaPath>
      <NvccPath>$(CudaPath)\bin\nvcc.exe</NvccPath>
    </PropertyGroup>

    <Error Text="CUDA_PATH environment variable not set. Please install CUDA Toolkit."
           Condition="'$(CudaPath)' == ''" />

    <!-- Execute PowerShell script to build Linux CUDA modules -->
    <Exec Command="powershell.exe -ExecutionPolicy Bypass -File &quot;$(MSBuildThisFileDirectory)..\CrossCompileLinuxCuda.ps1&quot; -Configuration $(Configuration) -RuntimeIdentifier $(RuntimeIdentifier)"
          WorkingDirectory="$(MSBuildThisFileDirectory).."
          ConsoleToMsBuild="true"
          ContinueOnError="false">
      <Output TaskParameter="ConsoleOutput" PropertyName="CudaBuildOutput" />
    </Exec>

    <Message Text="Linux CUDA modules built successfully." Importance="high" />
  </Target>

  <!-- Include Linux .so files in publish output -->
  <ItemGroup Condition="'$(RuntimeIdentifier)' == 'linux-x64'">
    <!-- CudaAlignedBitrotFinder -->
    <Content Include="..\CudaAlignedBitrotFinder\bin\linux-x64\CudaAlignedBitrotFinder.so"
             Condition="Exists('..\CudaAlignedBitrotFinder\bin\linux-x64\CudaAlignedBitrotFinder.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <Link>libs/CudaAlignedBitrotFinder.so</Link>
      <Visible>false</Visible>
    </Content>

    <!-- CudaUnalignedBitrotFinder -->
    <Content Include="..\CudaUnalignedBitrotFinder\bin\linux-x64\CudaUnalignedBitrotFinder.so"
             Condition="Exists('..\CudaUnalignedBitrotFinder\bin\linux-x64\CudaUnalignedBitrotFinder.so')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <Link>libs/CudaUnalignedBitrotFinder.so</Link>
      <Visible>false</Visible>
    </Content>

    <!-- PTX files for runtime compilation fallback -->
    <Content Include="..\CudaAlignedBitrotFinder\bin\linux-x64\CudaAlignedBitrotFinder.ptx"
             Condition="Exists('..\CudaAlignedBitrotFinder\bin\linux-x64\CudaAlignedBitrotFinder.ptx')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <Link>libs/CudaAlignedBitrotFinder.ptx</Link>
      <Visible>false</Visible>
    </Content>

    <Content Include="..\CudaUnalignedBitrotFinder\bin\linux-x64\CudaUnalignedBitrotFinder.ptx"
             Condition="Exists('..\CudaUnalignedBitrotFinder\bin\linux-x64\CudaUnalignedBitrotFinder.ptx')">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <Link>libs/CudaUnalignedBitrotFinder.ptx</Link>
      <Visible>false</Visible>
    </Content>
  </ItemGroup>
</Project>